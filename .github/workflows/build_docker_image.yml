name: Build docker image and run tests

on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    services:
      mariadb:
        image: mariadb:10.4
        env:
          MARIADB_USER: amelie_test
          MARIADB_PASSWORD: amelie_test
          MYSQL_DATABASE: amelie_test
          MYSQL_ROOT_PASSWORD: amelie_test
        ports: ['3306:3306']
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set build variables
        id: vars
        run: |
          echo "BUILD_BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          echo "BUILD_COMMIT=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_BRANCH=${{ steps.vars.outputs.BUILD_BRANCH }}
            BUILD_COMMIT=${{ steps.vars.outputs.BUILD_COMMIT }}
            BUILD_DATE=${{ steps.vars.outputs.BUILD_DATE }}

      - name: Verify MariaDB connection
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"3306" --silent; do
            sleep 1
          done

      - name: Run Amelie tests
        run: |
          docker run --rm --entrypoint "/amelie/scripts/run_tests.sh" ghcr.io/inter-actief/amelie@${{ steps.push.outputs.digest }}

      - name: Cleanup untagged images older than 1 week
        uses: snok/container-retention-policy@v2
        with:
          image-names: amelie
          cut-off: 1 week ago UTC
          account-type: org
          org-name: Inter-Actief
          token: ${{ secrets.GITHUB_TOKEN }}
          token-type: github-token
          untagged-only: true

      - name: Cleanup tagged images (except main, production and graphql) older than 1 month
        uses: snok/container-retention-policy@v2
        with:
          image-names: amelie
          cut-off: 1 month ago UTC
          account-type: org
          org-name: Inter-Actief
          token: ${{ secrets.GITHUB_TOKEN }}
          token-type: github-token
          skip-tags: main, production, 741-graphql-api
